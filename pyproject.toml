[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

# Project settings -----------------------------------------------------------------------------------------------------
[project]
name = "mockvox"
dynamic = ["version"]
description = ""
authors = [{name = "MockVox Team", email = "drz@easyman.com.cn"}]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["mockvox", "TTS"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
]

# Required dependencies ------------------------------------------------------------------------------------------------
dependencies = [
    "fastapi>=0.95.0",
    "numpy",
    "uvicorn>=0.34.0",
    "python-multipart>=0.0.20",
    "redis>=5.0.0",
    "celery>=5.1.0",
    "ffmpeg-python>=0.2.0",
    "scipy>=1.15.2",
    "torch==2.6.0",
    "torchaudio==2.6.0",
    "torchvision==0.21.0",
    "transformers",
    "pypinyin>=0.54.0",
    "opencc>=1.1.9",
    "dotenv",
    "modelscope",
    "funasr",
    "onnxruntime",
    "jieba_fast",
    "librosa",
    "tqdm",
    "torchmetrics",
    "peft",
    "x_transformers",
    "ToJyutping",
    "wordsegment",
    "g2p-en",
    "g2p",
    "pyopenjtalk",
    "ko_pron",
    "g2pk2",
    "datasets==2.16.0",
    "cuda-python",
    "nemo_toolkit[asr]==2.0.0",
    "split_lang",
    "addict",
    "fugashi",
    "unidic_lite"
]

# Optional dependencies ------------------------------------------------------------------------------------------------
[project.optional-dependencies]
dev = [
    "pytest",
    "httpx",
    "pytest-mock"
]
docs = [
]

[project.scripts]
mockvox = "mockvox.cli:main"

# Tools settings -------------------------------------------------------------------------------------------------------
[[tool.poetry.source]]
name = "modelscope-oss"
url = "https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html"
priority = "supplemental"

[tool.setuptools]  # configuration specific to the `setuptools` build backend.
packages = { find = { where = ["src"], include = ["*"] } }
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = { attr = "mockvox.__version__" }

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "--doctest-modules --durations=30 --color=yes"
markers = [
    "slow: skip slow tests unless --slow is set",
]
norecursedirs = [".git", "dist", "build"]